{
  "name": "Sunrise",
  "id": "GCwuPigteHfPT4nAT",
  "sources": {
    "main": "/*\n Sunrise pattern for Pixelblaze\n Tested with Pixelblaze V2+ and 150 RGBW pixels\n When power is applied to the controller, a sunrise starts from black over orange to all white and stays at white until reset.\n Alternative Mode: An alternative constant ambient orange can be selected via GPIO\n Author: HedgeHawk 06.01.2022\n*/\n\n//####START CONFIGURABLE PARAMETERS####\nexport var disableAltMode=true //alt mode for non-sunrise time\nexport var speedup=100 //set this to 1 for realtime sunrise\n\nexport var risetime=9.15/speedup //65536*X seconds. 9.15=10 minutes\nexport var color=0.02 //Hue of the sunrise 0.02 is a nice sunrise-orange\nexport var altBrightness = 0.3 //Brightness for alternative mode\n//####END CONFIGURABLE PARAMETERS####\n\nexport var t0 = time(risetime) //the time() sawtooth counter is not reset when the pattern is modified. We therefore base the pattern off the initial value when the pattern starts.\nexport var t1=0 //Phase 1 counter. Brightness of the orange part\nexport var t2=0 //Phase 2 counter. Whiteness for fade to white.\n\nexport var t=0 //global time counter 0...1\n\n\npinMode(4,INPUT) //alt mode selector switch: 1=Sunrise 0=alternative mode (constant color)\n\nexport function beforeRender(delta) {\n  t = (1+time(risetime)-t0)%1 //always count from 0 to 1. Caution t0 may be bigger than time()\n  t1=max(t1,clamp(2*t,0,1)) //Phase 1 takes the first half of the risetime, so we count at 2x speed\n  t2=max(t2,clamp(2*t-1,0,1)) //Phase 2 takes the second half of the risetime, so we count at 2x speed with offset -1 to start exactly when t1 is over. Stick at 1 to avoid looping through multiple sunrises.\n}\n\nexport function render(index) {\n  if(disableAltMode || digitalRead(4)){\n    idx=index/pixelCount\n    if(t2==0){\n      v=clamp(-1+triangle(idx)+(2*t1),0,1) //The triangle tip rises like the sun. Initial offset: -1 to start with just the tip. Final offset +1 to illuminate everything evenly. Clamp values between 0 and 1 to avoid looping of overflown values.\n      hsv(color,1, v)\n    }else{\n      v=clamp(-1+triangle(idx)+(2*t2),0,1) //Starting with the final phase 1 configuration, decrease saturation for a fade to white.\n      hsv(color,1-v, 1)    \n    }\n  }else{\n    hsv(color,1,altBrightness) //alt mode shows constant color\n  }\n}"
  },
  "preview": "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"
}